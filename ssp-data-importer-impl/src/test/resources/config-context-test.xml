<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
        xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

     <util:map id="configReferences">
         <entry key="exists.only.for.testing.1" value="${exists.only.for.testing.1}" />
        <entry key="exists.only.for.testing.2" value="${exists.only.for.testing.2}" />
     </util:map>
    <!-- @location specifies properties files in order of increasing precedence.

    So here we load packaged defaults first, i.e. with least priority, and any values therein can be overridden by
    config in an "external" file. The location of the latter is specified by setting a directory as a system property at
    startup (e.g. -Dssp.importer.configdir=/opt/sspimporter/config)

    We're doing this with the "old" <context:property-placeholder> mechanism rather than Environment/ApplicationContext
    initialization because the latter would make it effectively impossible to use the CommandLineJobRunner because
    the granularity of the start() method therein is such that we can't intercept/override the ApplicationContext
    configuration process.

    For setting Spring profiles, the assumption is that we'll use the special 'spring.profiles.active' system property.
    (e.g. -Dspring.profiles.active=postgres)
    -->
    <context:property-placeholder ignore-resource-not-found="true"
                                  location="classpath:ssp-importer.default.properties,classpath:ssp-importer.test.properties,
                                            file:${ssp.importer.configdir}/ssp-importer.properties"/>

</beans>